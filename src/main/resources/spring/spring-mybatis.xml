<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

    <!-- enable component scanning -->
    <context:component-scan base-package="com.demo.quentin.service"/>

    <!-- enable autowire -->
    <context:annotation-config/>

    <!-- enable transaction demarcation with annotations -->
    <tx:annotation-driven/>

    <!-- 读取mysql jdbc的配置-->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:properties/db.properties"/>
    </bean>
    <!-- 配置数据源，从上面配置文件读取-->
    <!-- 数据源 -->
    <bean id="dataSource1" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.mysql-driverClassName}"/>
        <property name="url" value="${jdbc.mysql-url}"/>
        <property name="username" value="${jdbc.mysql-username}"/>
        <property name="password" value="${jdbc.mysql-password}"/>
        <property name="initialSize" value="1"/>
        <property name="minIdle" value="1"/>
        <property name="maxActive" value="20"/>
        <property name="maxWait" value="60000"/>
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <property name="minEvictableIdleTimeMillis" value="25200000"/>
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>
        <property name="validationQuery" value="SELECT 'x' FROM DUAL"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="testWhileIdle" value="true"/>
    </bean>

    <bean id="dataSource2" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.oracle-url}"/>
        <property name="username" value="${jdbc.oracle-username}"/>
        <property name="password" value="${jdbc.oracle-password}"/>
        <property name="initialSize" value="1"/>
        <property name="minIdle" value="1"/>
        <property name="maxActive" value="20"/>
        <property name="maxWait" value="60000"/>
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <property name="minEvictableIdleTimeMillis" value="25200000"/>
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>
        <property name="validationQuery" value="SELECT 'x' FROM DUAL"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="testWhileIdle" value="true"/>
    </bean>

    <bean id="dataSource" class="com.demo.quentin.db.DataSourceRouter">
        <property name="defaultTargetDataSource" ref="dataSource1"/>
        <property name="targetDataSources">
            <map key-type="com.demo.quentin.db.DataSourceEnum">
                <entry key="lbdb" value-ref="dataSource2"></entry>
                <entry key="predb" value-ref="dataSource1"></entry>
            </map>
        </property>
    </bean>


    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 配置扫描Domain的包路径 -->
        <property name="typeAliasesPackage" value="com.demo.quentin.domain"/>
        <!-- 配置mybatis配置文件的位置 -->
        <property name="configLocation" value="classpath:spring/mybatis-config.xml"/>
        <!-- 配置扫描Mapper XML的位置 -->
        <property name="mapperLocations" value="classpath:mybatis/mapper/*Mapper.xml"/>
    </bean>

    <!-- 配置扫描Mapper接口的包路径 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.demo.quentin.domain.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!--获取数据源使用目标对象AOP动态切换-->
    <bean id="dataSourceAspect" class="com.demo.quentin.db.DataSourceAspect" />
    <aop:config>
        <aop:aspect id="dataSourceChange" ref="dataSourceAspect">
            <aop:pointcut id="dataSourceAop" expression="execution(* com.demo.quentin.service.*.*(..))"></aop:pointcut>
            <aop:before method="beforeAdvice" pointcut-ref="dataSourceAop"></aop:before>
        </aop:aspect>
    </aop:config>

</beans>